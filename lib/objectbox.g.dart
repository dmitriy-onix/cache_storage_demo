// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'data/source/local/objectbox/object_box_cache_record.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 5177957861133699925),
      name: 'ObjectBoxCacheRecord',
      lastPropertyId: const obx_int.IdUid(5, 1958554492904001509),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8339435362543880832),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 372619680951104408),
            name: 'cacheKey',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(1, 2124645931398255563)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 8443141496063818263),
            name: 'group',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(2, 3828996249643228137)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2670505105851092362),
            name: 'value',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 1958554492904001509),
            name: 'createdAt',
            type: 10,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(1, 5177957861133699925),
      lastIndexId: const obx_int.IdUid(2, 3828996249643228137),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    ObjectBoxCacheRecord: obx_int.EntityDefinition<ObjectBoxCacheRecord>(
        model: _entities[0],
        toOneRelations: (ObjectBoxCacheRecord object) => [],
        toManyRelations: (ObjectBoxCacheRecord object) => {},
        getId: (ObjectBoxCacheRecord object) => object.id,
        setId: (ObjectBoxCacheRecord object, int id) {
          object.id = id;
        },
        objectToFB: (ObjectBoxCacheRecord object, fb.Builder fbb) {
          final cacheKeyOffset = fbb.writeString(object.cacheKey);
          final groupOffset = fbb.writeString(object.group);
          final valueOffset = fbb.writeString(object.value);
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, cacheKeyOffset);
          fbb.addOffset(2, groupOffset);
          fbb.addOffset(3, valueOffset);
          fbb.addInt64(4, object.createdAt.millisecondsSinceEpoch);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final cacheKeyParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final groupParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final valueParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final createdAtParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0));
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final object = ObjectBoxCacheRecord(
              cacheKey: cacheKeyParam,
              group: groupParam,
              value: valueParam,
              createdAt: createdAtParam,
              id: idParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [ObjectBoxCacheRecord] entity fields to define ObjectBox queries.
class ObjectBoxCacheRecord_ {
  /// See [ObjectBoxCacheRecord.id].
  static final id = obx.QueryIntegerProperty<ObjectBoxCacheRecord>(
      _entities[0].properties[0]);

  /// See [ObjectBoxCacheRecord.cacheKey].
  static final cacheKey =
      obx.QueryStringProperty<ObjectBoxCacheRecord>(_entities[0].properties[1]);

  /// See [ObjectBoxCacheRecord.group].
  static final group =
      obx.QueryStringProperty<ObjectBoxCacheRecord>(_entities[0].properties[2]);

  /// See [ObjectBoxCacheRecord.value].
  static final value =
      obx.QueryStringProperty<ObjectBoxCacheRecord>(_entities[0].properties[3]);

  /// See [ObjectBoxCacheRecord.createdAt].
  static final createdAt =
      obx.QueryDateProperty<ObjectBoxCacheRecord>(_entities[0].properties[4]);
}
